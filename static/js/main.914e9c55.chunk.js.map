{"version":3,"sources":["components/Weather/styles.module.scss","components/News/styles.module.scss","components/Link/styles.module.scss","components/Wrapper/Wrapper.module.scss","components/Loader/styles.module.scss","components/Loader/Bars.svg","components/NewsRenderer/styles.module.scss","api/api.js","components/Loader/index.js","components/Link/index.jsx","components/NewsRenderer/index.js","components/News/News.js","helpers/helper.js","hooks/useWeather.js","components/Icons/Humidity/Humidity.js","components/Icons/Wind/Wind.js","components/Icons/Pressure/Pressure.js","components/Icons/GeoPoint/GeoPoint.js","components/Icons/Sunrise/Sunrise.js","components/Icons/Sunset/Sunset.js","components/Icons/UV/UV.js","components/HourlyWeatherCard/HourlyWeatherCard.js","components/HourlyCardsRenderer/HourlyForecastRenderer.js","components/Weather/index.js","components/Wrapper/Wrapper.js","components/App/App.js","serviceWorker.js","index.js","components/HourlyWeatherCard/styles.module.scss","components/Palette/styles.module.scss"],"names":["module","exports","APIKey","process","getWeather","lat","long","a","endpoint","Promise","resolve","reject","axios","get","then","response","data","catch","error","getCityName","getNews","resource","Loader","src","Spinner","className","styles","spinner","alt","Link","id","selected","title","selectResource","selector","active","onClick","NewsRenderer","news","wrapper","map","article","index","key","content","image","urlToImage","description","link","newsLink","href","url","target","rel","React","memo","useState","titles","descriptions","articles","totalResults","setNews","useEffect","checkNews","loading","setLoading","selectedGoogle","setSelectedGoogle","selectedLenta","setSelectedLenta","res","prevState","console","log","selectors","links","copyright","timeStampConverter","value","Date","toLocaleTimeString","hour","minute","UseWeather","cityName","setCityName","temperature","humidity","pressure","clouds","accuracy","icon","UVI","wind","windAngle","feelsLike","sunrise","sunset","currentWeather","setCurrentWeather","hourlyWeather","setHourlyWeather","getLocation","navigator","geolocation","getCurrentPosition","handleLocation","errorHandler","maximumAge","enableHighAccuracy","alert","position","latitude","coords","longitude","weatherProcessing","name","err","warn","responseData","current","iconTag","weather","iconUrl","pressureToMmHG","cloudsValue","main","sunriseValue","sunsetValue","temp","toFixed","uvi","feels_like","wind_speed","wind_deg","hourly","slice","dt","getHours","finally","code","Humidity","width","height","fill","rest","data-qa","data-role","xmlns","viewBox","d","defaultProps","Wind","Pressure","GeoPointIcon","Sunrise","Sunset","UV","dateTime","feelsTemp","pops","uvindex","hourlyWeatherWrapper","temps","HourlyForecastRenderer","forecast","Weather","tempValue","tempText","city","GeoPoint","optional","iconAndState","hourlyForecast","Wrapper","background","style","backgroundColor","container","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,YAAc,4BAA4B,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,IAAM,oBAAoB,aAAe,6BAA6B,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,yBAAyB,MAAQ,sBAAsB,eAAiB,iC,mBCAzZD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,0BAA0B,MAAQ,sBAAsB,cAAgB,8BAA8B,SAAW,yBAAyB,UAAY,0BAA0B,SAAW,2B,mBCA3PD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,OAAS,yB,mBCA/DD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,UAAY,6B,mBCAvED,EAAOC,QAAU,CAAC,QAAU,0B,mBCD5BD,EAAOC,QAAU,IAA0B,kC,2ECC3CD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,wBAAwB,QAAU,wBAAwB,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,uB,4JCC/NC,EAASC,mCAEFC,EAAU,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,4DACZ,kDACRC,EAFoB,UACZ,kDADY,gBAGNH,EAHM,gBAGKC,EAHL,6DAG8DJ,GAH9D,kBAKjB,IAAIO,SAAQ,SAACC,EAASC,GAC3BC,IAAMC,IAAIL,GACTM,MAAK,SAAAC,GAAQ,OAAIL,EAAQK,EAASC,SAClCC,OAAM,SAAAC,GAAK,OAAIP,EAAOO,UARD,2CAAH,wDAYVC,EAAW,uCAAG,WAAOd,EAAKC,GAAZ,iBAAAC,EAAA,4DACb,gDACNC,EAFmB,UACb,gDADa,gBAEMH,EAFN,gBAEiBC,EAFjB,0BAEuCJ,GAFvC,kBAKAU,IAAMC,IAAIL,GALV,YAKjBO,EALiB,iDAQdA,EAASC,MARK,kJAAH,wDAeXI,EAAO,uCAAG,WAAOC,GAAP,iBAAAd,EAAA,4DACT,uCACG,mCACTC,EAHe,UACT,uCADS,oBAGca,EAHd,mBAEN,oCAFM,kBAMIT,IAAMC,IAAIL,GANd,YAMbO,EANa,iDAQVA,EAASC,MARC,kJAAH,sD,mDCnBLM,EAPA,kBACb,yBAAKC,IAAKC,IACLC,UAAWC,IAAOC,QAClBC,IAAI,Y,iBCEIC,EAPF,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,SAAUC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,eAAvB,OACT,yBACIR,UAAYM,EAAD,UAAsCL,IAAOQ,SAA7C,YAAyDR,IAAOS,QAAhE,UAAeT,IAAOQ,UACjCE,QAAS,kBAAMH,EAAeH,KAC7BE,I,gBC2BMK,EA/BM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OACE,yBAAKb,UAAWC,IAAOa,SACpBD,EAAKE,KAAI,SAACC,EAASC,GAClB,OACE,yBAAKjB,UAAWC,IAAOe,QAASE,IAAKD,GACnC,yBAAKjB,UAAWC,IAAOkB,SACrB,yBAAKnB,UAAWC,IAAOmB,MAAOtB,IAAKkB,EAAQK,WAAYlB,IAAK,SAC5D,yBAAKH,UAAWC,IAAOqB,aACrB,yBAAKtB,UAAWC,IAAOM,OACpBS,EAAQT,OAEX,yBAAKP,UAAWC,IAAOsB,MACrB,uBACEvB,UAAWC,IAAOuB,SAClBC,KAAMT,EAAQU,IACdC,OAAO,SACPC,IAAI,uBACHZ,EAAQM,sB,GCyDdO,IAAMC,MAtER,WAAO,IAAD,EACOC,mBAAS,CAC/BC,OAAQ,GACRC,aAAc,GACdC,SAAU,GACVtC,SAAU,iBACVuC,aAAc,KANC,mBACVtB,EADU,KACJuB,EADI,KASjBC,qBAAU,WACRC,EAAUzB,EAAKjB,YACd,CAACiB,EAAKjB,WAXQ,MAcamC,oBAAS,GAdtB,mBAcVQ,EAdU,KAcDC,EAdC,OAe2BT,oBAAS,GAfpC,mBAeVU,EAfU,KAeMC,EAfN,OAgByBX,oBAAS,GAhBlC,mBAgBVY,EAhBU,KAgBKC,EAhBL,KAkBXN,EAAY,SAAC1C,EAAUS,GAG3B,OAFAmC,GAAW,GAEHnC,GACN,IAAK,SACHqC,GAAkB,GAClBE,GAAiB,GACjB,MACF,IAAK,QACHA,GAAiB,GACjBF,GAAkB,GAClB,MACF,QACEA,GAAkB,GAGtB/C,EAAQC,GACLP,MAAK,SAAAwD,GACJL,GAAW,GACXJ,GAAQ,SAAAU,GAAS,sBAEVA,EAFU,CAGbZ,SAAUW,EAAIX,SACdC,aAAcU,EAAIV,qBAIvB3C,OAAM,SAAAC,GAAK,OAAIsD,QAAQC,IAAIvD,OAGhC,OACE,yBAAKO,UAAWC,IAAOa,SACrB,yBAAKd,UAAWC,IAAOgD,WACrB,yBAAKjD,UAAWC,IAAOiD,OACrB,kBAAC,EAAD,CAAM3C,MAAO,SACPF,GAAI,SACJC,SAAUmC,EACVjC,eAAgB,SAACH,GAAD,OAAQiC,EAAU,iBAAkBjC,MAC1D,kBAAC,EAAD,CAAME,MAAO,QACPF,GAAI,QACJC,SAAUqC,EACVnC,eAAgB,SAACH,GAAD,OAAQiC,EAAU,QAASjC,OAEnD,yBAAKL,UAAWC,IAAOkD,WAAvB,2BAIDZ,EAAU,kBAAC,EAAD,MAAY,kBAAC,EAAD,CAAc1B,KAAMA,EAAKqB,e,oBCzEzCkB,EAAqB,SAACC,GAEjC,OADa,IAAIC,KAAa,IAARD,GACVE,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,aCEjD,SAASC,IAAc,IAAD,EACL3B,oBAAS,GADJ,mBAC5BQ,EAD4B,KACnBC,EADmB,OAGHT,mBAAS,IAHN,mBAG5B4B,EAH4B,KAGlBC,EAHkB,OAIS7B,mBAAS,CACnD8B,YAAa,GACbC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,KAhByB,mBAI5BC,EAJ4B,KAIZC,EAJY,OAmBO3C,mBAAS,IAnBhB,mBAmB5B4C,EAnB4B,KAmBbC,EAnBa,KAqBnCvC,qBAAU,WACRwC,MACC,IAEH,IAAMA,EAAc,WAClB,GAAIC,UAAUC,YAAa,CAKzBD,UAAUC,YAAYC,mBAAmBC,EAAgBC,EAJzC,CACdC,WAAY,KACZC,oBAAoB,SAKtBC,MAAM,kDAIJJ,EAAiB,SAACK,GACtB,IAAMC,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAC5BxB,EAAWqB,EAASE,OAAOvB,SAEjCyB,EAAkBH,EAAUE,EAAWxB,IAGnCyB,EAAoB,SAACH,EAAUE,EAAWxB,GAE9CS,GAAkB,SAAA5B,GAAS,sBAElBA,EAFkB,CAGrBmB,gBAGNzB,GAAW,GAGX9C,EAAY6F,EAAUE,GACrBpG,MAAK,SAAAwD,GAAG,OAAIe,EAAYf,EAAI,GAAG8C,SAC/BnG,OAAM,SAAAoG,GAAG,OAAI7C,QAAQ8C,KAAK,6BAA8BD,MAEzDjH,EAAW4G,EAAUE,GACpBpG,MAAK,SAAAwD,GACJ,ID9D2BQ,EC8DrByC,EAAejD,EAAIkD,QAEnBC,EAAUF,EAAaG,QAAQ,GAAG/B,KAClCgC,EAAO,2CAAuCF,EAAvC,QACPG,EAAyC,IAAxBL,EAAa/B,SAC9BqC,EAAcN,EAAaG,QAAQ,GAAGI,KAEtCC,EAAelD,EAAmB0C,EAAavB,SAC/CgC,EAAcnD,EAAmB0C,EAAatB,QAEpDzB,QAAQC,IAAI,aAAcsD,GAC1BvD,QAAQC,IAAI,YAAauD,GAGzB7B,GAAkB,SAAA5B,GAAS,sBAElBA,EAFkB,CAGrBe,YAAaiC,EAAaU,KAAKC,QAAQ,GACvCtC,IAAK2B,EAAaY,IAClBpC,UAAWwB,EAAaa,WAAWF,QAAQ,GAC3C3C,SAAUgC,EAAahC,SACvBC,SAAUoC,EACVnC,OAAQoC,EACRhC,KAAM0B,EAAac,WACnBvC,UAAWyB,EAAae,SACxB3C,KAAMgC,EACN3B,QAAS+B,EACT9B,OAAQ+B,OAGd3B,EAAiB/B,EAAIiE,OAAOC,MAAM,EAAG,ID5FV1D,EC4FgCyC,EAAakB,GD5FnC,IAAI1D,KAAa,IAARD,GAAc4D,iBC8F7DzH,OAAM,SAAAC,GAAK,OAAIsD,QAAQtD,MAAMA,MAC7ByH,SAAQ,kBAAM1E,GAAW,OAGtB0C,EAAe,SAACU,GACH,IAAbA,EAAIuB,KACN9B,MAAM,2CACgB,IAAbO,EAAIuB,MACb9B,MAAM,oCAIV,MAAO,CACLZ,iBACAE,gBACApC,UACAoB,WACAkB,e,WClHEuC,EAAW,SAAC,GAAD,IAEXC,EAFW,EAEXA,MACAC,EAHW,EAGXA,OACAC,EAJW,EAIXA,KACGC,EALQ,gDAOb,uCACIC,UAAQ,OACRC,YAAU,gBACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BACIK,EAAE,+7CAKZT,EAASU,aAAe,CACtBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGO1F,UAAMC,KAAKsF,GC7BpBW,EAAO,SAAC,GAAD,IAEPV,EAFO,EAEPA,MACAC,EAHO,EAGPA,OACAC,EAJO,EAIPA,KACGC,EALI,gDAOT,uCACIC,UAAQ,OACRC,YAAU,YACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BACIK,EAAE,uZAKZE,EAAKD,aAAe,CAClBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGO1F,UAAMC,KAAKiG,GC7BpBC,EAAW,SAAC,GAAD,IAEXX,EAFW,EAEXA,MACAC,EAHW,EAGXA,OACAC,EAJW,EAIXA,KACGC,EALQ,gDAOb,uCACIC,UAAQ,OACRC,YAAU,gBACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BAAMK,EAAE,+8BAKdG,EAASF,aAAe,CACtBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGO1F,UAAMC,KAAKkG,GC5BpBC,EAAe,SAAC,GAAD,IACnBZ,EADmB,EACnBA,MACAC,EAFmB,EAEnBA,OACAC,EAHmB,EAGnBA,KACGC,EAJgB,gDAMnB,uCACEC,UAAQ,OACRC,YAAU,gBACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,YACRL,KAAMA,GACFC,GAEJ,0BACEK,EAAE,4bACFN,KAAMA,MAKZU,EAAaH,aAAe,CAC1BT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGOU,QC7BTC,EAAU,SAAC,GAAD,IAEVb,EAFU,EAEVA,MACAC,EAHU,EAGVA,OACAC,EAJU,EAIVA,KACGC,EALO,gDAOZ,uCACIC,UAAQ,OACRC,YAAU,eACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BACIK,EAAE,m+BACFN,KAAMA,MAKhBW,EAAQJ,aAAe,CACrBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGOW,QC9BTC,EAAS,SAAC,GAAD,IAETd,EAFS,EAETA,MACAC,EAHS,EAGTA,OACAC,EAJS,EAITA,KACGC,EALM,gDAOX,uCACIC,UAAQ,OACRC,YAAU,cACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BACIK,EAAE,q6CAMZM,EAAOL,aAAe,CACpBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGOY,QC9BTC,EAAK,SAAC,GAAD,IACGf,EADH,EACGA,MACAC,EAFH,EAEGA,OACAC,EAHH,EAGGA,KACGC,EAJN,gDAMP,uCACIC,UAAQ,OACRC,YAAU,gBACVL,MAAOA,EACPC,OAAQA,EACRK,MAAM,6BACNC,QAAQ,gBACRL,KAAMA,GACFC,GAEN,0BACIK,EAAE,2sBACFN,KAAMA,IACV,0BACIM,EAAE,s3BACFN,KAAMA,IACV,0BACIM,EAAE,wxBACFN,KAAMA,MAKhBa,EAAGN,aAAe,CAChBT,MAAO,GACPC,OAAQ,GACRC,KAAM,QAGO1F,UAAMC,KAAKsG,G,gBCOXvG,OAAMC,MAvCK,SAAC,GAShB,IAPLuG,EAOI,EAPJA,SACAxE,EAMI,EANJA,YACAyE,EAKI,EALJA,UACEpE,EAIE,EAJFA,KACFqE,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACApE,EACI,EADJA,KAEJ,OACI,yBAAKpE,UAAWC,IAAOwI,sBACrB,yBAAKzI,UAAWC,IAAOyI,OACrB,yBAAK1I,UAAWC,IAAO4D,aACpBA,GAEH,yBAAK7D,UAAWC,IAAO4D,aACpByE,IAIL,yBAAKtI,UAAWC,IAAOuI,SAAvB,MACMA,GAEN,yBAAKxI,UAAWC,IAAOsI,MACrB,yBAAKzI,IAAKoE,EAAM/D,IAAI,mBAAmBoI,GAEzC,yBAAKvI,UAAWC,IAAOmE,MACrB,kBAAC,EAAD,CAAMiD,MAAO,GAAIC,OAAQ,KAAMlD,EADjC,QAGA,yBAAKpE,UAAWC,IAAOoI,UACpBjF,EAAmBiF,QChBfM,GAjBgB,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,cAC3BA,QAD2B,IAC3BA,OAD2B,EAC3BA,EAAU7H,KAAI,SAAA6H,GACZ,IAAM1C,EAAO,2CAAuC0C,EAAS3C,QAAQ,GAAG/B,KAA3D,QAEb,OACI,kBAAC,WAAD,CAAUhD,IAAK0H,EAAS5B,IACtB,kBAAC,GAAD,CAAmBqB,SAAUO,EAAS5B,GACnBnD,YAAa+E,EAASpC,KAAKC,QAAQ,GACnC6B,UAAWM,EAASjC,WAAWF,QAAQ,GACvC8B,KAAMK,EAAS3C,QAAQ,GAAGI,KAC1BjC,KAAMwE,EAAShC,WACf1C,KAAMgC,EACNsC,QAASI,EAASlC,WCyElCmC,GAzEC,WAAO,IAAD,EAoBhBnF,IApBgB,IAGlBe,eACER,EAJgB,EAIhBA,SACAK,EALgB,EAKhBA,UACAJ,EANgB,EAMhBA,KACAL,EAPgB,EAOhBA,YACAG,EARgB,EAQhBA,OACAF,EATgB,EAShBA,SACAC,EAVgB,EAUhBA,SACAK,EAXgB,EAWhBA,KAEAG,GAbgB,EAYhBF,UAZgB,EAahBE,SACAC,EAdgB,EAchBA,OACAL,EAfgB,EAehBA,IAEFQ,EAjBkB,EAiBlBA,cACApC,EAlBkB,EAkBlBA,QACAoB,EAnBkB,EAmBlBA,SAGF,OACI,yBAAK3D,UAAWC,IAAOa,SACrB,yBAAKd,UAAWC,IAAO4D,aACrB,0BAAM7D,UAAWC,IAAO6I,WAAYjF,GACpC,0BAAM7D,UAAWC,IAAO8I,UAAxB,cACA,0BAAM/I,UAAWC,IAAO6I,WACrBxE,IAGL,yBAAKtE,UAAWC,IAAO+I,MACrB,kBAACC,EAAD,MAAe,8BAAOtF,GADxB,MAC4CM,EAD5C,QAGA,yBAAKjE,UAAWC,IAAOiJ,UACrB,yBAAKlJ,UAAWC,IAAOoD,OACrB,kBAAC,EAAD,MADF,IACa,8BAAOkB,IAEpB,yBAAKvE,UAAWC,IAAOoD,OACrB,kBAAC,EAAD,MADF,IACY,8BAAOmB,KAGrB,yBAAKxE,UAAWC,IAAOkJ,cACrB,yBAAKnJ,UAAWC,IAAOiE,MACpBA,EAAO,yBAAKpE,IAAKoE,EAAM/D,IAAI,iBAAmB,gBAEjD,yBAAKH,UAAWC,IAAO+D,QACpBA,GAEH,kBAAC,EAAD,MACA,yBAAKhE,UAAWC,IAAO+D,QAASG,IAGjC5B,EAAU,kBAAC,EAAD,MACP,yBAAKvC,UAAWC,IAAOiJ,UACrB,yBAAKlJ,UAAWC,IAAOoD,OACrB,kBAAC,EAAD,MADF,IACc,8BAAOS,GADrB,KAGA,yBAAK9D,UAAWC,IAAOoD,OACrB,kBAAC,EAAD,MAAW,8BAAOU,IAEpB,yBAAK/D,UAAWC,IAAOoD,OACrB,kBAAC,EAAD,MAAO,8BAAOe,GADhB,QAKN,yBAAKpE,UAAWC,IAAOmJ,gBACrB,kBAAC,GAAD,CAAwBR,SAAUjE,OC1D7B0E,GAhBC,WAAO,IAAD,EAEgBtH,mBAAS,QAFzB,mBAEbuH,EAFa,UAIpB,OACI,yBAAKtJ,UAAWC,IAAOqJ,WAClBC,MAAO,CAACC,gBAAiBF,IAC5B,yBAAKtJ,UAAWC,IAAOwJ,WACrB,kBAAC,GAAD,SCXKC,GAFJ,kBAAM,kBAAC,GAAD,OCSXC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BrF,UAAUsF,cACPC,SAASH,GACT7K,MAAK,SAAAiL,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf7F,UAAUsF,cAAcQ,YAI1B7H,QAAQC,IACN,gHAKEmH,GAAUA,EAAOU,UACnBV,EAAOU,SAASP,KAMlBvH,QAAQC,IAAI,sCAGRmH,GAAUA,EAAOW,WACnBX,EAAOW,UAAUR,WAO5B9K,OAAM,SAAAC,GACLsD,QAAQtD,MAAM,4CAA6CA,MC1FjEsL,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmBrF,UAAW,CAGzE,GADkB,IAAIqG,IAAIzM,eAAwBmL,OAAOC,SAASrI,MACpD2J,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMxL,eAAN,sBAEPiL,KAgEV,SAAiCO,EAAOC,GAEtCmB,MAAMpB,GACH7K,MAAK,SAAAC,GAEJ,IAAMiM,EAAcjM,EAASkM,QAAQpM,IAAI,gBAEnB,MAApBE,EAASmM,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5G,UAAUsF,cAAcuB,MAAMtM,MAAK,SAAAiL,GACjCA,EAAasB,aAAavM,MAAK,WAC7BwK,OAAOC,SAAS+B,eAKpB5B,GAAgBC,EAAOC,MAG1B3K,OAAM,WACLuD,QAAQC,IACN,oEArFA8I,CAAwB5B,EAAOC,GAI/BrF,UAAUsF,cAAcuB,MAAMtM,MAAK,WACjC0D,QAAQC,IACN,gHAMJiH,GAAgBC,EAAOC,OCvC/BC,I,kBCVA7L,EAAOC,QAAU,CAAC,qBAAuB,qCAAqC,MAAQ,sBAAsB,YAAc,4BAA4B,QAAU,wBAAwB,KAAO,qBAAqB,KAAO,qBAAqB,SAAW,2B,kBCA3PD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,QAAU,wBAAwB,QAAU,wBAAwB,QAAU,wBAAwB,WAAa,2BAA2B,QAAU,2B","file":"static/js/main.914e9c55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3h_Vp\",\"temperature\":\"styles_temperature__1FURS\",\"tempValue\":\"styles_tempValue__VjEx5\",\"tempText\":\"styles_tempText__jZpZU\",\"city\":\"styles_city__3F--z\",\"sun\":\"styles_sun__1G1OS\",\"iconAndState\":\"styles_iconAndState__1m2nj\",\"clouds\":\"styles_clouds__7BliN\",\"icon\":\"styles_icon__1niIR\",\"optional\":\"styles_optional__YtqOg\",\"value\":\"styles_value__1jidG\",\"hourlyForecast\":\"styles_hourlyForecast__3S-X7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1FJBo\",\"selectors\":\"styles_selectors__1_GFH\",\"links\":\"styles_links__1YH7g\",\"refreshButton\":\"styles_refreshButton__-T3DC\",\"newsList\":\"styles_newsList__160yV\",\"copyright\":\"styles_copyright__2jBBR\",\"newsLink\":\"styles_newsLink__1qhO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selector\":\"styles_selector__3PsOo\",\"active\":\"styles_active__2NvZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Wrapper_background__2NZfL\",\"container\":\"Wrapper_container__3SUY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__1daT-\"};","module.exports = __webpack_public_path__ + \"static/media/Bars.2fc9d01e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__l59jG\",\"article\":\"styles_article__2gJql\",\"content\":\"styles_content__38NpD\",\"description\":\"styles_description__1LqAR\",\"image\":\"styles_image__35s37\",\"title\":\"styles_title__mnylx\",\"link\":\"styles_link__1iaZy\"};","import axios from 'axios';\r\n\r\nconst APIKey = process.env.REACT_APP_API_KEY;\r\n\r\nexport const getWeather = async (lat, long) => {\r\n  const url = 'https://api.openweathermap.org/data/2.5/onecall';\r\n  let endpoint =\r\n      `${url}?lat=${lat}&lon=${long}&exclude=minutely,daily,alerts&units=metric&appid=${APIKey}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(endpoint)\r\n    .then(response => resolve(response.data))\r\n    .catch(error => reject(error));\r\n  });\r\n};\r\n\r\nexport const getCityName = async (lat, long) => {\r\n  const url = 'http://api.openweathermap.org/geo/1.0/reverse';\r\n  const endpoint = `${url}?lat=${lat}&lon=${long}&limit=1&appId=${APIKey}`;\r\n\r\n  try {\r\n    const response = await axios.get(endpoint);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    }\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const getNews = async (resource) => {\r\n  const url = 'https://newsapi.org/v2/top-headlines';\r\n  const apiKey = '01676b1d03984b97a1fe8635b7c59cd0';\r\n  const endpoint = `${url}?sources=${resource}&apiKey=${apiKey}`;\r\n\r\n  try {\r\n    const response = await axios.get(endpoint);\r\n    if (response) {\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\nimport Spinner from './Bars.svg';\r\n\r\nconst Loader = () => (\r\n  <img src={Spinner}\r\n       className={styles.spinner}\r\n       alt='loader'/>\r\n);\r\n\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Link = ({id, selected, title, selectResource}) =>\r\n    <div\r\n        className={!selected ? `${styles.selector}` : `${styles.selector} ${styles.active}`}\r\n        onClick={() => selectResource(id)}>\r\n        {title}\r\n    </div>\r\n\r\nexport default Link;","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst NewsRenderer = ({news}) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {news.map((article, index) => {\r\n        return (\r\n          <div className={styles.article} key={index}>\r\n            <div className={styles.content}>\r\n              <img className={styles.image} src={article.urlToImage} alt={'news'}/>\r\n              <div className={styles.description}>\r\n                <div className={styles.title}>\r\n                  {article.title}\r\n                </div>\r\n                <div className={styles.link}>\r\n                  <a\r\n                    className={styles.newsLink}\r\n                    href={article.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\">\r\n                    {article.description}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default NewsRenderer;","import React, {useState, useEffect} from 'react';\r\nimport {getNews} from \"../../api/api\";\r\nimport styles from './styles.module.scss';\r\n\r\nimport Loader from '../Loader';\r\nimport Link from \"../Link\";\r\nimport NewsRenderer from \"../NewsRenderer\";\r\n\r\nconst News = () => {\r\n  const [news, setNews] = useState({\r\n    titles: '',\r\n    descriptions: '',\r\n    articles: [],\r\n    resource: 'google-News-ru',\r\n    totalResults: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkNews(news.resource);\r\n  }, [news.resource]);\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedGoogle, setSelectedGoogle] = useState(false);\r\n  const [selectedLenta, setSelectedLenta] = useState(false);\r\n\r\n  const checkNews = (resource, id) => {\r\n    setLoading(true);\r\n\r\n    switch (id) {\r\n      case 'google':\r\n        setSelectedGoogle(true);\r\n        setSelectedLenta(false);\r\n        break;\r\n      case 'lenta':\r\n        setSelectedLenta(true);\r\n        setSelectedGoogle(false);\r\n        break;\r\n      default:\r\n        setSelectedGoogle(true);\r\n    }\r\n\r\n    getNews(resource)\r\n      .then(res => {\r\n        setLoading(false);\r\n        setNews(prevState => (\r\n          {\r\n            ...prevState,\r\n            articles: res.articles,\r\n            totalResults: res.totalResults // maybe I will need this one later\r\n          }\r\n        ));\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.selectors}>\r\n        <div className={styles.links}>\r\n          <Link title={'Google'}\r\n                id={'google'}\r\n                selected={selectedGoogle}\r\n                selectResource={(id) => checkNews('google-News-ru', id)}/>\r\n          <Link title={'Lenta'}\r\n                id={'lenta'}\r\n                selected={selectedLenta}\r\n                selectResource={(id) => checkNews('lenta', id)}/>\r\n        </div>\r\n        <div className={styles.copyright}>\r\n          powered by NewsAPI.org\r\n        </div>\r\n      </div>\r\n      {loading ? <Loader/> : <NewsRenderer news={news.articles}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(News);\r\n","export const timeStampConverter = (value) => {\r\n  const date = new Date(value * 1000);\r\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\nexport const timeStampToHours = (value) => new Date(value * 1000).getHours();\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport {getCityName, getWeather} from '../api/api';\r\nimport {timeStampConverter, timeStampToHours} from '../helpers/helper';\r\n\r\nexport default function UseWeather() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [cityName, setCityName] = useState('');\r\n  const [currentWeather, setCurrentWeather] = useState({\r\n    temperature: '',\r\n    humidity: '',\r\n    pressure: '',\r\n    clouds: '',\r\n    accuracy: '',\r\n    icon: '',\r\n    UVI: '',\r\n    wind: '',\r\n    windAngle: '',\r\n    feelsLike: '',\r\n    sunrise: '',\r\n    sunset: ''\r\n  });\r\n\r\n  const [hourlyWeather, setHourlyWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      const options = {\r\n        maximumAge: 7200000,\r\n        enableHighAccuracy: true,\r\n      };\r\n      navigator.geolocation.getCurrentPosition(handleLocation, errorHandler,\r\n          options);\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.');\r\n    }\r\n  };\r\n\r\n  const handleLocation = (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    const accuracy = position.coords.accuracy;\r\n\r\n    weatherProcessing(latitude, longitude, accuracy);\r\n  };\r\n\r\n  const weatherProcessing = (latitude, longitude, accuracy) => {\r\n\r\n    setCurrentWeather(prevState => (\r\n        {\r\n          ...prevState,\r\n          accuracy,\r\n        }));\r\n\r\n    setLoading(true);\r\n\r\n\r\n    getCityName(latitude, longitude)\r\n    .then(res => setCityName(res[0].name))\r\n    .catch(err => console.warn('Cannot get location info! ', err));\r\n\r\n    getWeather(latitude, longitude)\r\n    .then(res => {\r\n      const responseData = res.current;\r\n\r\n      const iconTag = responseData.weather[0].icon;\r\n      const iconUrl = `http://openweathermap.org/img/wn/${iconTag}.png`;\r\n      const pressureToMmHG = responseData.pressure * 0.75;\r\n      const cloudsValue = responseData.weather[0].main;\r\n\r\n      const sunriseValue = timeStampConverter(responseData.sunrise);\r\n      const sunsetValue = timeStampConverter(responseData.sunset);\r\n\r\n      console.log('sunrise , ', sunriseValue);\r\n      console.log('sunset , ', sunsetValue);\r\n\r\n\r\n      setCurrentWeather(prevState => (\r\n          {\r\n            ...prevState,\r\n            temperature: responseData.temp.toFixed(1),\r\n            UVI: responseData.uvi,\r\n            feelsLike: responseData.feels_like.toFixed(1),\r\n            humidity: responseData.humidity,\r\n            pressure: pressureToMmHG,\r\n            clouds: cloudsValue,\r\n            wind: responseData.wind_speed,\r\n            windAngle: responseData.wind_deg,\r\n            icon: iconUrl,\r\n            sunrise: sunriseValue,\r\n            sunset: sunsetValue\r\n          }));\r\n\r\n      setHourlyWeather(res.hourly.slice(0, 25 - timeStampToHours(responseData.dt)));\r\n    })\r\n    .catch(error => console.error(error))\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const errorHandler = (err) => {\r\n    if (err.code === 1) {\r\n      alert('Error: Access to geolocation is denied!');\r\n    } else if (err.code === 2) {\r\n      alert('Error: Position is unavailable!');\r\n    }\r\n  };\r\n\r\n  return {\r\n    currentWeather,\r\n    hourlyWeather,\r\n    loading,\r\n    cityName,\r\n    getLocation\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nconst Humidity = (\r\n    {\r\n      width,\r\n      height,\r\n      fill,\r\n      ...rest\r\n    }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-humidity\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path\r\n          d=\"M480 64A416.32 416.32 0 0 0 64 480C64 709.504 250.496 896 480 896c2.24 0 4.48-0.256 6.72-0.768 19.52-0.256 39.04-1.984 57.792-4.992a252.288 252.288 0 0 1-24-60.8c-13.248 1.536-26.752 2.56-40.512 2.56A351.552 351.552 0 0 1 128 480C128 285.248 285.248 128 480 128a352.256 352.256 0 0 1 340.992 264c-0.256 0-0.256 0 0 0 1.984 7.744 3.008 15.744 4.48 23.744l14.72 17.28c12.288 13.696 32.576 37.952 54.784 66.944 0.256-6.464 1.024-13.248 1.024-19.968 0-33.472-4.224-67.2-12.224-99.52a83.84 83.84 0 0 0-0.768-4.48A416.768 416.768 0 0 0 480 64z m0 128C321.28 192 192 321.28 192 480a32 32 0 1 0 64 0 223.616 223.616 0 0 1 299.008-211.008l48.96-48.512a287.744 287.744 0 0 0-119.68-28.224C482.688 192 481.408 192 480 192z m191.232 63.744a32.448 32.448 0 0 0-21.952 9.728l-191.808 192a31.872 31.872 0 1 0 45.056 45.056l192.192-192a32.192 32.192 0 0 0 7.04-35.264 32.64 32.64 0 0 0-30.528-19.52zM768 447.232l-24 27.776s-40.96 46.976-81.984 105.472c-20.736 29.248-41.536 61.504-57.536 93.248C588.48 705.472 576 736.256 576 768c0 105.728 86.272 192 192 192s192-86.272 192-192c0-31.744-12.48-62.528-28.48-94.272-16-31.744-36.8-64-57.536-93.248-40.96-58.496-81.984-105.472-81.984-105.472z m0 100.736c14.016 17.024 27.008 31.04 54.016 69.312 19.2 27.712 38.464 57.984 52.48 85.44 14.016 27.264 21.504 52.8 21.504 65.28 0 71.04-56.96 128-128 128-71.04 0-128-56.96-128-128 0-12.48 7.488-38.016 21.504-65.28 14.016-27.52 33.28-57.728 52.48-85.44 27.008-38.272 40-52.288 54.016-69.248z\"/>\r\n    </svg>\r\n\r\n);\r\n\r\nHumidity.defaultProps = {\r\n  width: 24,\r\n  height: 24,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default React.memo(Humidity);\r\n","import React from 'react';\r\n\r\nconst Wind = (\r\n    {\r\n      width,\r\n      height,\r\n      fill,\r\n      ...rest\r\n    }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-Wind\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path\r\n          d=\"M128 128v768h64V128z m160 0c-17.728 0-32 14.272-32 32v320c0 8.96 3.776 17.728 10.496 23.744 6.784 6.016 15.744 8.96 24.512 8.256l640-64A32.256 32.256 0 0 0 960 416v-192a32.256 32.256 0 0 0-28.992-32l-640-64H288zM320 195.52l64 6.208v236.544l-64 6.208z m128 12.48l64 6.528v210.944L448 432z m128 12.992l64 6.528v184.96l-64 6.528z m128 12.8l64 6.208v160l-64 6.272z m128 12.736l64 6.464v134.016l-64 6.464z\"/>\r\n    </svg>\r\n\r\n);\r\n\r\nWind.defaultProps = {\r\n  width: 24,\r\n  height: 24,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default React.memo(Wind);\r\n","import React from 'react';\r\n\r\nconst Pressure = (\r\n    {\r\n      width,\r\n      height,\r\n      fill,\r\n      ...rest\r\n    }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-Pressure\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path d=\"M480 64A416.32 416.32 0 0 0 64 480a416.192 416.192 0 0 0 186.24 346.752l8 5.248h443.52l8-5.248A416.192 416.192 0 0 0 896 480C896 250.496 709.504 64 480 64z m0 64C674.752 128 832 285.248 832 480c0 120-60.992 224.512-152.768 288h-398.72C188.992 704.512 128 600 128 480 128 285.248 285.248 128 480 128z m0 64c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z m191.232 63.744a32.448 32.448 0 0 0-21.952 9.728l-191.808 192a31.872 31.872 0 1 0 45.056 45.056l192.192-192a32.192 32.192 0 0 0 7.04-35.264 32.64 32.64 0 0 0-30.528-19.52zM288 256c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z m-64 192c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z m512 0c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z m-448 192c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z m384 0c-17.728 0-32 14.272-32 32s14.272 32 32 32 32-14.272 32-32-14.272-32-32-32z\"  />\r\n    </svg>\r\n\r\n);\r\n\r\nPressure.defaultProps = {\r\n  width: 24,\r\n  height: 24,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default React.memo(Pressure);\r\n","import React from 'react';\r\n\r\nconst GeoPointIcon = ({\r\n  width,\r\n  height,\r\n  fill,\r\n  ...rest\r\n}) => (\r\n  <svg\r\n    data-qa=\"icon\"\r\n    data-role=\"icon-GeoPoint\"\r\n    width={width}\r\n    height={height}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 12 16\"\r\n    fill={fill}\r\n    {...rest}\r\n  >\r\n    <path\r\n      d=\"M6.00163 0C2.80647 0 0.207031 2.59944 0.207031 5.79456C0.207031 9.75981 5.39262 15.581 5.61341 15.8269C5.82078 16.0579 6.18284 16.0575 6.38984 15.8269C6.61063 15.581 11.7962 9.75981 11.7962 5.79456C11.7962 2.59944 9.19675 0 6.00163 0ZM6.00163 8.70997C4.39406 8.70997 3.08625 7.40212 3.08625 5.79456C3.08625 4.187 4.39409 2.87919 6.00163 2.87919C7.60916 2.87919 8.91697 4.18703 8.91697 5.79459C8.91697 7.40216 7.60916 8.70997 6.00163 8.70997Z\"\r\n      fill={fill}/>\r\n  </svg>\r\n\r\n);\r\n\r\nGeoPointIcon.defaultProps = {\r\n  width: 24,\r\n  height: 24,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default GeoPointIcon;\r\n","import React from 'react';\r\n\r\nconst Sunrise = (\r\n    {\r\n      width,\r\n      height,\r\n      fill,\r\n      ...rest\r\n    }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-Sunrise\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path\r\n          d=\"M128 512h170.666667a213.333333 213.333333 0 0 1 213.333333-213.333333 213.333333 213.333333 0 0 1 213.333333 213.333333h170.666667a42.666667 42.666667 0 0 1 42.666667 42.666667 42.666667 42.666667 0 0 1-42.666667 42.666666H128a42.666667 42.666667 0 0 1-42.666667-42.666666 42.666667 42.666667 0 0 1 42.666667-42.666667m512 0a128 128 0 0 0-128-128 128 128 0 0 0-128 128h256M512 85.333333l101.973333 145.92C582.4 219.733333 547.84 213.333333 512 213.333333c-35.84 0-70.4 6.4-101.973333 17.92L512 85.333333M142.506667 298.666667l177.493333-14.933334A307.2 307.2 0 0 0 253.44 362.666667c-18.773333 31.573333-29.44 64-35.413333 97.706666L142.506667 298.666667m738.56 0l-75.52 161.706666a299.648 299.648 0 0 0-101.546667-177.066666l177.066667 15.36m-338.773334 396.8l132.693334 132.693333a42.496 42.496 0 1 1-60.16 60.16L512 785.493333l-102.826667 102.826667a42.496 42.496 0 1 1-60.16-60.16l132.693334-132.693333c8.96-8.533333 19.2-12.8 30.293333-12.8 11.093333 0 21.333333 4.266667 30.293333 12.8z\"\r\n          fill={fill}/>\r\n    </svg>\r\n\r\n);\r\n\r\nSunrise.defaultProps = {\r\n  width: 30,\r\n  height: 30,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default Sunrise;\r\n","import React from 'react';\r\n\r\nconst Sunset = (\r\n    {\r\n      width,\r\n      height,\r\n      fill,\r\n      ...rest\r\n    }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-Sunset\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1024 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path\r\n          d=\"M128 512 298.666667 512C298.666667 394.24 394.24 298.666667 512 298.666667 629.76 298.666667 725.333333 394.24 725.333333 512L896 512C919.466667 512 938.666667 531.2 938.666667 554.666667 938.666667 578.133333 919.466667 597.333333 896 597.333333L128 597.333333C104.533333 597.333333 85.333333 578.133333 85.333333 554.666667 85.333333 531.2 104.533333 512 128 512M640 512C640 441.173333 582.826667 384 512 384 441.173333 384 384 441.173333 384 512L640 512M512 85.333333 613.973333 231.253333C582.4 219.733333 547.84 213.333333 512 213.333333 476.16 213.333333 441.6 219.733333 410.026667 231.253333L512 85.333333M142.506667 298.666667 320 283.733333C294.4 305.493333 271.36 331.946667 253.44 362.666667 234.666667 394.24 224 426.666667 218.026667 460.373333L142.506667 298.666667M881.066667 298.666667 805.546667 460.373333C799.573333 426.666667 788.053333 393.813333 770.133333 362.666667 752.213333 331.946667 729.6 305.066667 704 283.306667L881.066667 298.666667M542.293333 883.626667 674.986667 750.933333C691.626667 734.293333 691.626667 706.986667 674.986667 690.346667 658.346667 673.706667 631.466667 673.706667 614.826667 690.346667L512 793.173333 409.173333 690.346667C392.533333 673.706667 365.653333 673.706667 349.013333 690.346667 332.373333 706.986667 332.373333 734.293333 349.013333 750.933333L481.706667 883.626667C490.666667 891.733333 500.906667 896 512 896 523.093333 896 533.333333 891.733333 542.293333 883.626667Z\"/>\r\n\r\n    </svg>\r\n\r\n);\r\n\r\nSunset.defaultProps = {\r\n  width: 30,\r\n  height: 30,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default Sunset;\r\n","import React from 'react';\r\n\r\nconst UV = ({\r\n              width,\r\n              height,\r\n              fill,\r\n              ...rest\r\n            }) => (\r\n    <svg\r\n        data-qa=\"icon\"\r\n        data-role=\"icon-GeoPoint\"\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 1025 1024\"\r\n        fill={fill}\r\n        {...rest}\r\n    >\r\n      <path\r\n          d=\"M315.507 561.634c5.726-6.222 5.344-15.91-0.864-21.661-6.222-5.765-15.938-5.393-21.703 0.827-2.514 2.714-61.293 67.65-36.072 170.727 16.963 69.328 85.197 105.097 88.093 106.585a15.266 15.266 0 0 0 6.999 1.7c5.56 0 10.921-3.034 13.65-8.316 3.888-7.524 0.935-16.782-6.58-20.686-0.586-0.304-58.744-31.066-72.328-86.584-8.865-36.23-6.78-71.14 6.2-103.76 9.725-24.44 22.3-38.494 22.605-38.832zM355.575 138.883h165.964c14.136 0 25.594-11.46 25.594-25.595s-11.458-25.594-25.594-25.594H355.575c-14.136 0-25.595 11.459-25.595 25.594s11.46 25.595 25.595 25.595zM355.575 238.383h165.964c14.136 0 25.594-11.46 25.594-25.595s-11.458-25.595-25.594-25.595H355.575c-14.136 0-25.595 11.46-25.595 25.595s11.46 25.595 25.595 25.595z\"\r\n          fill={fill}/>\r\n      <path\r\n          d=\"M661.818 786.048c-11.317-8.473-27.358-6.166-35.829 5.149-56.752 75.8-170.456 126.624-296.556 69.29-44.805-20.37-80.644-56.498-100.913-101.727-29.01-64.727-31.59-133.825-7.265-194.565 23.47-58.607 70.46-105.91 128.924-129.782 12.11-4.945 19.934-16.57 19.934-29.617v-55.775c0-6.602 5.579-12.18 12.181-12.18h112.529c6.602 0 12.18 5.578 12.18 12.18v55.78c0 13.045 7.824 24.668 19.931 29.611 13.085 5.342 28.026-0.933 33.371-14.02 3.262-7.99 2.193-16.67-2.112-23.435v-47.936c0-34.943-28.428-63.37-63.37-63.37H382.296c-34.942 0-63.37 28.427-63.37 63.37v43.188c-65.693 30.439-118.201 85.564-145.19 152.956-14.313 35.745-21.134 73.574-20.27 112.438 0.916 41.092 10.45 82.17 28.344 122.093 25.374 56.614 70.278 101.856 126.439 127.392 42.71 19.418 86.795 29.22 130.317 29.218 24.943 0 49.709-3.221 73.905-9.698 61.364-16.425 116.231-53.619 154.499-104.73 8.47-11.316 6.165-27.357-5.151-35.83z\"\r\n          fill={fill}/>\r\n      <path\r\n          d=\"M679.33 454.293c-8.283 0-14.998 6.716-14.998 14.999v170.515c0 24.239-6.433 47.84-17.65 64.754-10.126 15.266-22.892 23.673-35.947 23.673-13.056 0-25.823-8.407-35.947-23.673-11.218-16.914-17.651-40.515-17.651-64.754V469.292c0-8.284-6.716-14.999-14.999-14.999s-14.998 6.716-14.998 14.999v170.515c0 30.427 8.043 59.314 22.649 81.334 15.864 23.918 37.51 37.091 60.947 37.091s45.083-13.172 60.946-37.09c14.606-22.023 22.65-50.909 22.65-81.335V469.292c-0.002-8.283-6.718-14.999-15.001-14.999zM859.688 454.743c-8.036-2.011-16.18 2.871-18.193 10.906l-54.047 215.837L733.4 465.649c-2.014-8.037-10.16-12.916-18.194-10.906-8.035 2.012-12.918 10.158-10.906 18.193l68.325 272.86c1.713 6.827 7.808 11.594 14.822 11.594 7.015 0 13.11-4.767 14.823-11.6l68.325-272.854c2.012-8.035-2.871-16.18-10.907-18.193z\"\r\n          fill={fill}/>\r\n    </svg>\r\n\r\n);\r\n\r\nUV.defaultProps = {\r\n  width: 40,\r\n  height: 40,\r\n  fill: '#fff',\r\n};\r\n\r\nexport default React.memo(UV);\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {timeStampConverter} from '../../helpers/helper';\r\nimport Wind from '../Icons/Wind/Wind';\r\n\r\nconst HourlyWeatherCard = (\r\n    {\r\n      dateTime,\r\n      temperature,\r\n      feelsTemp,\r\n        icon,\r\n      pops,\r\n      uvindex,\r\n      wind,\r\n    }) => {\r\n  return (\r\n      <div className={styles.hourlyWeatherWrapper}>\r\n        <div className={styles.temps}>\r\n          <div className={styles.temperature}>\r\n            {temperature}\r\n          </div>\r\n          <div className={styles.temperature}>\r\n            {feelsTemp}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.uvindex}>\r\n          UV {uvindex}\r\n        </div>\r\n        <div className={styles.pops}>\r\n          <img src={icon} alt='{weather icon}'/>{pops}\r\n        </div>\r\n        <div className={styles.wind}>\r\n          <Wind width={24} height={24}/>{wind} m/s\r\n        </div>\r\n        <div className={styles.dateTime}>\r\n          {timeStampConverter(dateTime)}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nHourlyWeatherCard.propTypes = {};\r\n\r\nexport default React.memo(HourlyWeatherCard);\r\n","import React, {Fragment} from 'react';\r\nimport HourlyWeatherCard from '../HourlyWeatherCard/HourlyWeatherCard';\r\n\r\nconst HourlyForecastRenderer = ({forecast}) =>\r\n    forecast?.map(forecast => {\r\n      const iconUrl = `http://openweathermap.org/img/wn/${forecast.weather[0].icon}.png`;\r\n\r\n      return (\r\n          <Fragment key={forecast.dt}>\r\n            <HourlyWeatherCard dateTime={forecast.dt}\r\n                               temperature={forecast.temp.toFixed(1)}\r\n                               feelsTemp={forecast.feels_like.toFixed(1)}\r\n                               pops={forecast.weather[0].main}\r\n                               wind={forecast.wind_speed}\r\n                               icon={iconUrl}\r\n                               uvindex={forecast.uvi}/>\r\n          </Fragment>\r\n      );\r\n    });\r\n\r\nexport default HourlyForecastRenderer;\r\n","import React from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\nimport Loader from '../Loader';\r\nimport UseWeather from '../../hooks/useWeather';\r\nimport Humidity from '../Icons/Humidity/Humidity';\r\nimport Wind from '../Icons/Wind/Wind';\r\nimport Pressure from '../Icons/Pressure/Pressure';\r\nimport GeoPointIcon from '../Icons/GeoPoint/GeoPoint';\r\nimport Sunrise from '../Icons/Sunrise/Sunrise';\r\nimport Sunset from '../Icons/Sunset/Sunset';\r\nimport UV from '../Icons/UV/UV';\r\nimport HourlyForecastRenderer\r\n  from '../HourlyCardsRenderer/HourlyForecastRenderer';\r\n\r\nconst Weather = () => {\r\n\r\n  const {\r\n    currentWeather: {\r\n      accuracy,\r\n      feelsLike,\r\n      icon,\r\n      temperature,\r\n      clouds,\r\n      humidity,\r\n      pressure,\r\n      wind,\r\n      windAngle,\r\n      sunrise,\r\n      sunset,\r\n      UVI,\r\n    },\r\n    hourlyWeather,\r\n    loading,\r\n    cityName,\r\n  } = UseWeather();\r\n\r\n  return (\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.temperature}>\r\n          <span className={styles.tempValue}>{temperature}</span>\r\n          <span className={styles.tempText}>feels like</span>\r\n          <span className={styles.tempValue}>\r\n            {feelsLike}\r\n          </span>\r\n        </div>\r\n        <div className={styles.city}>\r\n          <GeoPointIcon/><span>{cityName}</span> (~{accuracy} m.)\r\n        </div>\r\n        <div className={styles.optional}>\r\n          <div className={styles.value}>\r\n            <Sunrise/> <span>{sunrise}</span>\r\n          </div>\r\n          <div className={styles.value}>\r\n            <Sunset/> <span>{sunset}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.iconAndState}>\r\n          <div className={styles.icon}>\r\n            {icon ? <img src={icon} alt=\"weather icon\"/> : '🙄'}\r\n          </div>\r\n          <div className={styles.clouds}>\r\n            {clouds}\r\n          </div>\r\n          <UV/>\r\n          <div className={styles.clouds}>{UVI}</div>\r\n        </div>\r\n\r\n        {loading ? <Loader/> : (\r\n            <div className={styles.optional}>\r\n              <div className={styles.value}>\r\n                <Humidity/> <span>{humidity}</span>%\r\n              </div>\r\n              <div className={styles.value}>\r\n                <Pressure/><span>{pressure}</span>\r\n              </div>\r\n              <div className={styles.value}>\r\n                <Wind/><span>{wind}</span>m/s\r\n              </div>\r\n            </div>\r\n        )}\r\n        <div className={styles.hourlyForecast}>\r\n          <HourlyForecastRenderer forecast={hourlyWeather}/>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport styles from './Wrapper.module.scss';\r\n\r\nimport News from '../News/News';\r\nimport Palette from '../Palette/index';\r\nimport Weather from '../Weather';\r\n\r\nconst Wrapper = () => {\r\n\r\n  const [background, setBackground] = useState('#FFF');\r\n\r\n  return (\r\n      <div className={styles.background}\r\n           style={{backgroundColor: background}}>\r\n        <div className={styles.container}>\r\n          <Weather/>\r\n          {/*<News/>*/}\r\n        </div>\r\n        {/*<Palette changeColor={(color) => setBackground(color)}/>*/}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\nimport Wrapper from '../Wrapper/Wrapper';\n\nconst App =() => <Wrapper />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the App load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web App is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different App. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your App to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hourlyWeatherWrapper\":\"styles_hourlyWeatherWrapper__RklJ3\",\"temps\":\"styles_temps__3MANQ\",\"temperature\":\"styles_temperature__1x7P_\",\"uvindex\":\"styles_uvindex__3J3Rp\",\"pops\":\"styles_pops__1ismH\",\"wind\":\"styles_wind__rVO-N\",\"dateTime\":\"styles_dateTime__3e2mq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorChanger\":\"styles_colorChanger__jpZgR\",\"palette\":\"styles_palette__2tMW8\",\"pointer\":\"styles_pointer__1U38Y\",\"wrapper\":\"styles_wrapper__26MUs\",\"colorBlock\":\"styles_colorBlock__2IMSU\",\"visible\":\"styles_visible__2omKP\"};"],"sourceRoot":""}