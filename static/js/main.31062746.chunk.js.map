{"version":3,"sources":["components/Wrapper/Wrapper.module.scss","components/WeatherElement/WeatherElement.module.scss","components/Weather/styles.module.scss","components/HourlyWeatherCard/styles.module.scss","components/Palette/index.jsx","api/api.js","hooks/useWeather.js","helpers/helper.js","components/Icons/Wind/Wind.js","components/HourlyWeatherCard/HourlyWeatherCard.js","components/HourlyCardsRenderer/HourlyForecastRenderer.js","components/WeatherElement/WeatherElement.jsx","components/Loader/Loader.jsx","components/Weather/index.js","components/Wrapper/Wrapper.js","components/App/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","components/Palette/styles.module.scss","components/Loader/styles.module.scss"],"names":["module","exports","Palette","changeColor","useState","showPalette","setShowpalette","colors","useMemo","paletteStyles","className","bind","styles","cx","palette","visible","colorChanger","role","aria-label","title","onClick","prevState","wrapper","map","color","colorBlock","style","background","pointer","React","memo","ENDPOINT","getWeather","lat","long","a","url","data","latitude","longitude","axios","post","weatherData","console","warn","getCityName","response","useWeather","loading","setLoading","cityName","setCityName","temperature","humidity","pressure","pops","accuracy","icon","UVI","wind","windAngle","feelsLike","sunrise","sunset","dt","currentWeather","setCurrentWeather","hourlyWeather","setHourlyWeather","getLocation","navigator","geolocation","getCurrentPosition","position","toFixed","then","res","name","catch","err","responseData","current","iconTag","weather","iconUrl","pressureToMmHG","popsValue","main","temp","uvi","feels_like","wind_speed","wind_deg","hourly","slice","error","finally","weatherProcessing","coords","code","alert","maximumAge","enableHighAccuracy","timeStampConverter","value","Date","toLocaleTimeString","hour","minute","Wind","width","height","fill","data-qa","data-role","xmlns","viewBox","d","defaultProps","HourlyWeatherCard","dateTime","uvindex","hourlyWeatherWrapper","temps","src","alt","HourlyForecastRenderer","forecast","feelsTemp","WeatherElement","suffix","nameSize","valueSize","weatherElement","fontSize","Loader","count","setCount","stringsArray","useEffect","intervalId","setInterval","clearInterval","loaderWrapper","dot1","dot2","dot3","Weather","dateInfo","currentDate","toLocaleDateString","year","month","day","currentTime","sunriseValue","sunsetValue","weatherWrapper","weatherContent","leftSide","rightSide","rightSideTop","rightSideBottom","hourlyForecast","Wrapper","window","localStorage","getItem","setBackground","handleColorChanging","useCallback","colorValue","setItem","backgroundColor","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.31062746.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Wrapper_background__2NZfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherElement\":\"WeatherElement_weatherElement__3l5Qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherWrapper\":\"styles_weatherWrapper__1D7L9\",\"weatherContent\":\"styles_weatherContent__sDiqf\",\"leftSide\":\"styles_leftSide__e-bFI\",\"temperature\":\"styles_temperature__1FURS\",\"rightSide\":\"styles_rightSide__2dR0m\",\"rightSideTop\":\"styles_rightSideTop__2v4cU\",\"rightSideBottom\":\"styles_rightSideBottom__1WxPs\",\"hourlyForecast\":\"styles_hourlyForecast__3S-X7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hourlyWeatherWrapper\":\"styles_hourlyWeatherWrapper__RklJ3\",\"temps\":\"styles_temps__3MANQ\",\"temperature\":\"styles_temperature__1x7P_\",\"uvindex\":\"styles_uvindex__3J3Rp\",\"pops\":\"styles_pops__1ismH\",\"wind\":\"styles_wind__rVO-N\",\"dateTime\":\"styles_dateTime__3e2mq\"};","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst Palette = (\n  {\n    changeColor,\n  },\n) => {\n  const [showPalette, setShowpalette] = useState(false);\n\n  const colors = useMemo(() => [\n    '#000000',\n    '#ff0000',\n    '#001f3f',\n    '#0074D9',\n    '#3D9970',\n    '#2ECC40',\n    '#FF4136',\n    '#85144b',\n    '#F012BE',\n    '#E27D60',\n    '#85DCBA',\n    '#E8A87C',\n    '#C38D9E',\n    '#41B3A3',\n    '#242582',\n    '#553D67',\n    '#F64C72',\n    '#99738E',\n    '#2F2FA2',\n    '#8D8741',\n    '#659DBD',\n    '#DAAD86',\n    '#BC986A',\n    '#FBEEC1',\n    '#379683',\n    '#3D5547',\n    '#3FEEE6',\n    '#97CAEF',\n    '#5CDB95',\n    '#5D5C61',\n    '#557A95',\n    '#501B1D',\n    '#64485C',\n    '#ADADAD',\n    '#190061',\n    '#3500D3',\n    '#282828',\n    '#950740',\n    '#C3073F',\n    '#AFD275',\n    '#7E685A',\n    '#80777d',\n    '#66FCF1',\n    '#1F2833',\n    '#e36a6a',\n    '#AC3B61',\n    '#123C69',\n    '#2C3531',\n    '#116466',\n  ], []);\n\n  const cx = className.bind(styles);\n\n  const paletteStyles = cx({\n    palette: true,\n    visible: showPalette,\n  });\n\n  const togglePalette = () => setShowpalette((prevState) => !prevState);\n\n  const renderPalette = () => colors.map((color) => (\n    <div\n      key={color}\n      className={styles.colorBlock}\n      style={{ background: color }}\n      onClick={() => changeColor(color)}\n    />\n  ));\n\n  return (\n    <div className={styles.colorChanger}>\n      <span\n        role=\"img\"\n        aria-label=\"palette\"\n        title=\"Change color\"\n        onClick={togglePalette}\n      >\n        🎨\n      </span>\n      <div\n        className={paletteStyles}\n      >\n        <div className={styles.wrapper}>\n          {renderPalette()}\n        </div>\n        <div className={styles.pointer} />\n      </div>\n    </div>\n  );\n};\n\nPalette.propTypes = {\n  changeColor: PropTypes.func.isRequired,\n};\nexport default React.memo(Palette);\n","import axios from 'axios';\n\nconst ENDPOINT = 'https://serene-beyond-92116.herokuapp.com';\n\nexport const getWeather = async (lat, long) => {\n  const url = `${ENDPOINT}/get-weather`;\n  const data = {\n    latitude: lat,\n    longitude: long,\n  };\n\n  try {\n    const weatherData = await axios.post(url, data);\n    if (weatherData) {\n      return weatherData.data;\n    }\n  } catch (error) {\n    console.warn('Error while getting weather data ', error);\n  }\n};\n\nexport const getCityName = async (lat, long) => {\n  const url = `${ENDPOINT}/get-city`;\n  const data = {\n    latitude: lat,\n    longitude: long,\n  };\n\n  try {\n    const response = await axios.post(url, data);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getNews = async (resource) => {\n  const url = 'https://newsapi.org/v2/top-headlines';\n  const apiKey = '01676b1d03984b97a1fe8635b7c59cd0';\n  const endpoint = `${url}?sources=${resource}&apiKey=${apiKey}`;\n\n  try {\n    const response = await axios.get(endpoint);\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    return error;\n  }\n};\n","import { useState } from 'react';\nimport { getCityName, getWeather } from '../api/api';\n\nexport default function useWeather() {\n  const [loading, setLoading] = useState(false);\n\n  const [cityName, setCityName] = useState('');\n  const [currentWeather, setCurrentWeather] = useState({\n    temperature: '',\n    humidity: '',\n    pressure: '',\n    pops: '',\n    accuracy: '',\n    icon: '',\n    UVI: '',\n    wind: '',\n    windAngle: '',\n    feelsLike: '',\n    sunrise: '',\n    sunset: '',\n    dt: 0,\n  });\n\n  const [hourlyWeather, setHourlyWeather] = useState([]);\n\n  const weatherProcessing = (latitude, longitude, accuracy) => {\n    setCurrentWeather(\n      (prevState) => ({ ...prevState, accuracy: accuracy.toFixed(2) }),\n    );\n\n    setLoading(true);\n\n    getCityName(latitude, longitude)\n      .then((res) => setCityName(res[0].name))\n      .catch((err) => console.warn('Cannot get location info! ', err));\n\n    getWeather(latitude, longitude).then((res) => {\n      const responseData = res.current;\n\n      const iconTag = responseData.weather[0].icon;\n      const iconUrl = `https://openweathermap.org/img/wn/${iconTag}.png`;\n      const pressureToMmHG = responseData.pressure * 0.75;\n      const popsValue = responseData.weather[0].main;\n\n      setCurrentWeather((prevState) => (\n        {\n          ...prevState,\n          temperature: responseData.temp.toFixed(1),\n          dt: responseData.dt,\n          UVI: responseData.uvi,\n          feelsLike: responseData.feels_like.toFixed(1),\n          humidity: responseData.humidity,\n          pressure: pressureToMmHG,\n          pops: popsValue,\n          wind: responseData.wind_speed,\n          windAngle: responseData.wind_deg,\n          icon: iconUrl,\n          sunrise: responseData.sunrise,\n          sunset: responseData.sunset,\n        }));\n\n      setHourlyWeather(res.hourly.slice(0, 6));\n    })\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      const options = {\n        maximumAge: 10 * 60 * 1000,\n        enableHighAccuracy: true,\n      };\n\n      const handleLocation = (position) => {\n        const { latitude } = position.coords;\n        const { longitude } = position.coords;\n        const { accuracy } = position.coords;\n\n        weatherProcessing(latitude, longitude, accuracy);\n      };\n\n      const errorHandler = (err) => {\n        if (err.code === 1) {\n          alert('Error: Access to geolocation is denied!');\n        } else if (err.code === 2) {\n          alert('Error: Position is unavailable!');\n        }\n      };\n\n      navigator.geolocation.getCurrentPosition(handleLocation, errorHandler,\n        options);\n    } else {\n      alert('Geolocation is not supported by this browser.');\n    }\n  };\n\n  return {\n    currentWeather,\n    hourlyWeather,\n    loading,\n    cityName,\n    getLocation,\n  };\n}\n","export const timeStampConverter = (value) => {\n  const date = new Date(value * 1000);\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n};\n\nexport const timeStampToHours = (value) => new Date(value * 1000).getHours();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Wind = (\n  {\n    width,\n    height,\n    fill,\n  },\n) => (\n  <svg\n    data-qa=\"icon\"\n    data-role=\"icon-Wind\"\n    width={width}\n    height={height}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 1024 1024\"\n    fill={fill}\n  >\n    <path\n      d=\"M128 128v768h64V128z m160 0c-17.728 0-32 14.272-32 32v320c0 8.96 3.776 17.728 10.496 23.744 6.784 6.016 15.744 8.96 24.512 8.256l640-64A32.256 32.256 0 0 0 960 416v-192a32.256 32.256 0 0 0-28.992-32l-640-64H288zM320 195.52l64 6.208v236.544l-64 6.208z m128 12.48l64 6.528v210.944L448 432z m128 12.992l64 6.528v184.96l-64 6.528z m128 12.8l64 6.208v160l-64 6.272z m128 12.736l64 6.464v134.016l-64 6.464z\"\n    />\n  </svg>\n\n);\n\nWind.defaultProps = {\n  width: 24,\n  height: 24,\n  fill: '#fff',\n};\n\nWind.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  fill: PropTypes.string,\n};\n\nexport default React.memo(Wind);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\nimport { timeStampConverter } from '../../helpers/helper';\nimport Wind from '../Icons/Wind/Wind';\n\nconst HourlyWeatherCard = (\n  {\n    dateTime,\n    temperature,\n    icon,\n    pops,\n    uvindex,\n    wind,\n  },\n) => (\n  <div className={styles.hourlyWeatherWrapper}>\n    <div className={styles.temps}>\n      <div className={styles.temperature}>\n        {temperature}\n      </div>\n    </div>\n    <div className={styles.uvindex}>\n      UV\n      {' '}\n      {uvindex}\n    </div>\n    <div className={styles.pops}>\n      <img src={icon} alt=\"{weather icon}\" />\n      {pops}\n    </div>\n    <div className={styles.wind}>\n      <Wind width={24} height={24} />\n      {wind}\n      {' '}\n      m/s\n    </div>\n    <div className={styles.dateTime}>\n      {timeStampConverter(dateTime)}\n    </div>\n  </div>\n);\n\nHourlyWeatherCard.propTypes = {\n  dateTime: PropTypes.number.isRequired,\n  temperature: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  pops: PropTypes.string.isRequired,\n  uvindex: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n};\n\nexport default React.memo(HourlyWeatherCard);\n","import React from 'react';\nimport HourlyWeatherCard from '../HourlyWeatherCard/HourlyWeatherCard';\n\nconst HourlyForecastRenderer = ({ forecast }) => forecast?.map((data) => {\n  const iconUrl = `http://openweathermap.org/img/wn/${data.weather[0].icon}.png`;\n\n  return (\n    <div key={data.dt}>\n      <HourlyWeatherCard\n        dateTime={data.dt}\n        temperature={data.temp.toFixed(1)}\n        feelsTemp={data.feels_like.toFixed(1)}\n        pops={data.weather[0].main}\n        wind={data.wind_speed}\n        icon={iconUrl}\n        uvindex={data.uvi}\n      />\n    </div>\n  );\n});\n\nexport default React.memo(HourlyForecastRenderer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './WeatherElement.module.scss';\n\nconst WeatherElement = (\n  {\n    name,\n    value,\n    suffix,\n    nameSize,\n    valueSize,\n  },\n) => (\n  <div className={styles.weatherElement}>\n    <div style={{ fontSize: `${nameSize}px` }}>{name}</div>\n    <div style={{ fontSize: `${valueSize}px` }}>\n      {value}\n      {suffix && (\n        <span>{suffix}</span>\n      )}\n    </div>\n  </div>\n);\n\nWeatherElement.defaultProps = {\n  suffix: null,\n  nameSize: null,\n  valueSize: null,\n};\n\nWeatherElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  suffix: PropTypes.string,\n  nameSize: PropTypes.number,\n  valueSize: PropTypes.number,\n\n};\n\nexport default React.memo(WeatherElement);\n","import React, {\n  useEffect, useMemo, useState,\n} from 'react';\n\nimport styles from './styles.module.scss';\n\nconst Loader = () => {\n  const [count, setCount] = useState(0);\n  const stringsArray = useMemo(() => [\n    'Launching the weather probe',\n    'Setting the link',\n    'Establishing connection',\n    'Processing the data',\n  ], []);\n\n  useEffect(() => {\n    let intervalId;\n\n    if (count < 4) {\n      intervalId = setInterval(() => {\n        setCount((prevState) => prevState + 1);\n      }, 2000);\n    } else {\n      setCount(0);\n      clearInterval(intervalId);\n    }\n    return () => clearInterval(intervalId);\n  }, [count]);\n\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.loading}>\n        <span>{stringsArray[count]}</span>\n        <span className={styles.dot1} />\n        <span className={styles.dot2} />\n        <span className={styles.dot3} />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Loader);\n","import React, { useEffect } from 'react';\n\nimport styles from './styles.module.scss';\nimport useWeather from '../../hooks/useWeather';\nimport HourlyForecastRenderer\n  from '../HourlyCardsRenderer/HourlyForecastRenderer';\nimport { timeStampConverter } from '../../helpers/helper';\nimport WeatherElement from '../WeatherElement/WeatherElement';\nimport Loader from '../Loader/Loader';\n\nconst Weather = () => {\n  const {\n    loading = true,\n    cityName,\n    getLocation,\n    hourlyWeather,\n    currentWeather: {\n      accuracy,\n      temperature,\n      humidity,\n      pressure,\n      wind,\n      sunrise,\n      sunset,\n      UVI,\n    },\n  } = useWeather();\n\n  useEffect(() => getLocation(), []);\n\n  const dateInfo = new Date();\n  const currentDate = dateInfo.toLocaleDateString('en-GB', {\n    year: 'numeric', month: 'short', day: 'numeric',\n  });\n\n  const currentTime = dateInfo.toLocaleTimeString('en-GB', {\n    hour: '2-digit', minute: '2-digit',\n  });\n\n  const sunriseValue = timeStampConverter(sunrise);\n  const sunsetValue = timeStampConverter(sunset);\n\n  return (\n    <div className={styles.weatherWrapper}>\n      {!loading\n        ? (\n          <>\n            <div className={styles.weatherContent}>\n              <div className={styles.leftSide}>\n                {temperature && (\n                  <div className={styles.temperature}>\n                    <span>{`${temperature}`}</span>\n                    <sup>°</sup>\n                  </div>\n                )}\n\n                <WeatherElement name={currentDate} value={currentTime} />\n                <WeatherElement name=\"Sunrise\" value={sunriseValue} />\n                <WeatherElement name=\"Sunset\" value={sunsetValue} />\n              </div>\n\n              <div className={styles.rightSide}>\n                <div className={styles.rightSideTop}>\n                  <span>\n                    {cityName}\n                  </span>\n                  <span>\n                    {`accuracy ~ ${accuracy} m.`}\n                  </span>\n                </div>\n                <div className={styles.rightSideBottom}>\n                  <WeatherElement\n                    name=\"Pressure\"\n                    value={pressure}\n                    suffix=\"mmPa\"\n                    nameSize={24}\n                  />\n                  <WeatherElement\n                    name=\"Humidity\"\n                    value={humidity}\n                    suffix=\"%\"\n                    nameSize={24}\n                  />\n                  <WeatherElement\n                    name=\"UV index\"\n                    value={UVI}\n                    nameSize={24}\n                  />\n                  <WeatherElement\n                    name=\"Wind\"\n                    value={wind}\n                    suffix=\"m/s\"\n                    nameSize={24}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className={styles.hourlyForecast}>\n              <HourlyForecastRenderer forecast={hourlyWeather} />\n            </div>\n          </>\n        )\n        : (\n          <Loader />\n        )}\n    </div>\n  );\n};\n\nexport default React.memo(Weather);\n","import React, { useState, useCallback } from 'react';\n\nimport styles from './Wrapper.module.scss';\n\nimport Palette from '../Palette/index';\nimport Weather from '../Weather';\n\nconst Wrapper = () => {\n  const color = window.localStorage.getItem('color');\n  const [background, setBackground] = useState(color || '#FFF');\n\n  const handleColorChanging = useCallback((colorValue) => {\n    window.localStorage.setItem('color', colorValue);\n    setBackground(colorValue);\n  }, []);\n\n  return (\n    <div\n      className={styles.background}\n      style={{ backgroundColor: background }}\n    >\n      <Weather />\n      <Palette changeColor={handleColorChanging} />\n    </div>\n  );\n};\n\nexport default React.memo(Wrapper);\n","import React from 'react';\nimport Wrapper from '../Wrapper/Wrapper';\n\nconst App = () => <Wrapper />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorChanger\":\"styles_colorChanger__jpZgR\",\"palette\":\"styles_palette__2tMW8\",\"pointer\":\"styles_pointer__1U38Y\",\"wrapper\":\"styles_wrapper__26MUs\",\"colorBlock\":\"styles_colorBlock__2IMSU\",\"visible\":\"styles_visible__2omKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"styles_loaderWrapper__3SYd_\",\"loading\":\"styles_loading__1DgyT\",\"scaleUpDown\":\"styles_scaleUpDown__2RJYn\",\"dot1\":\"styles_dot1__2Wkm6\",\"dot2\":\"styles_dot2__QadIP\",\"dot3\":\"styles_dot3__3uFLv\"};"],"sourceRoot":""}